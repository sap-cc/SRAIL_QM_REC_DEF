{"version":3,"sources":["../src/Component.ts"],"names":["support","system","Component","UIComponent","metadata","manifest","init","oDeviceModel","JSONModel","isTouch","touch","isNoTouch","isPhone","phone","isNoPhone","hasCameraSupport","navigator","mediaDevices","setDefaultBindingMode","BindingMode","OneWay","setModel","oModel","getModel","oDraftController","DraftController","undefined","getRouter","initialize","exit","destroy","getDraftController","getContentDensityClass","sContentDensityClass","document","body","classList","contains"],"mappings":";;;MACSA,O;MAASC,M;;AAYlB;AACA;AACA;MACqBC,S,GAAkBC,W;AAErBC,IAAAA,Q,EAAW;AACrBC,MAAAA,QAAQ,EAAE;AADW,K;AAQlBC,IAAAA,I,mBAAa;AAChB;AACA,4CAFgB,CAIhB;;AACA,WAAKC,YAAL,GAAoB,IAAIC,SAAJ,CAAc;AAC9BC,QAAAA,OAAO,EAAGT,OAAO,CAACU,KADY;AAE9BC,QAAAA,SAAS,EAAG,CAACX,OAAO,CAACU,KAFS;AAG9BE,QAAAA,OAAO,EAAGX,MAAM,CAACY,KAHa;AAI9BC,QAAAA,SAAS,EAAG,CAACb,MAAM,CAACY,KAJU;AAK9BE,QAAAA,gBAAgB,EAAG,kBAAkBC,SAAlB,IAA+B,kBAAkBA,SAAS,CAACC;AALhD,OAAd,CAApB;AAOA,WAAKV,YAAL,CAAkBW,qBAAlB,CAAwCC,WAAW,CAACC,MAApD;AACA,WAAKC,QAAL,CAAc,KAAKd,YAAnB,EAAiC,QAAjC;AAEA,UAAMe,MAAM,GAAG,KAAKC,QAAL,EAAf;AACA,WAAKC,gBAAL,GAAwB,IAAIC,eAAJ,CAAoBH,MAApB,EAA4BI,SAA5B,CAAxB,CAhBgB,CAkBhB;;AACA,WAAKC,SAAL,GAAiBC,UAAjB;AACH,K;AAGMC,IAAAA,I,mBAAO;AACV;AACA,WAAKL,gBAAL,CAAsBM,OAAtB;AACH,K;AAEMC,IAAAA,kB,iCAAsC;AACzC,aAAO,KAAKP,gBAAZ;AACH,K;AASMQ,IAAAA,sB,qCAAiC;AACpC,UAAI,KAAKC,oBAAL,KAA8BP,SAAlC,EAA6C;AACzC;AACA,YAAIQ,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,QAAxB,CAAiC,eAAjC,KAAqDH,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,QAAxB,CAAiC,kBAAjC,CAAzD,EAA+G;AAC3G,eAAKJ,oBAAL,GAA4B,EAA5B;AACH,SAFD,MAEO,IAAI,CAACjC,OAAO,CAACU,KAAb,EAAoB;AAAE;AACzB,eAAKuB,oBAAL,GAA4B,kBAA5B;AACH,SAFM,MAEA;AACH;AACA,eAAKA,oBAAL,GAA4B,eAA5B;AACH;AACJ;;AACD,aAAO,KAAKA,oBAAZ;AACH;;SA9DgB/B,S","sourcesContent":["import UIComponent from \"sap/ui/core/UIComponent\";\nimport { support, system } from \"sap/ui/Device\";\nimport DraftController from \"sap/ui/generic/app/transaction/DraftController\";\nimport BindingMode from \"sap/ui/model/BindingMode\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport ODataModel from \"sap/ui/model/odata/ODataModel\";\n\nexport interface ComponentData {\n    startupParameters?: {\n        [key: string]: string | Array<string> | undefined\n    };\n}\n\n/**\n * @namespace zqm.nc.recdefectfast\n */\nexport default class Component extends UIComponent {\n\n    public static metadata = {\n        manifest: \"json\"\n    };\n\n    private oDraftController: DraftController;\n    private oDeviceModel: JSONModel;\n    private sContentDensityClass: string;\n\n    public init(): void {\n        // call the base component's init function\n        super.init();\n\n        // prepare custom services & models\n        this.oDeviceModel = new JSONModel({\n            isTouch : support.touch,\n            isNoTouch : !support.touch,\n            isPhone : system.phone,\n            isNoPhone : !system.phone,\n            hasCameraSupport:  \"mediaDevices\" in navigator && \"getUserMedia\" in navigator.mediaDevices\n        });\n        this.oDeviceModel.setDefaultBindingMode(BindingMode.OneWay);\n        this.setModel(this.oDeviceModel, \"device\");\n\n        const oModel = this.getModel() as ODataModel;\n        this.oDraftController = new DraftController(oModel, undefined);\n\n        // create the views based on the url/hash\n        this.getRouter().initialize();\n    }\n\n\n    public exit() {\n        // clean up custom stuff\n        this.oDraftController.destroy();\n    }\n\n    public getDraftController(): DraftController {\n        return this.oDraftController;\n    }\n\n    /**\n     * This method can be called to determine whether the sapUiSizeCompact or sapUiSizeCozy\n     * design mode class should be set, which influences the size appearance of some controls.\n     *\n     * @public\n     * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty string if no css class should be set\n     */\n    public getContentDensityClass(): string {\n        if (this.sContentDensityClass === undefined) {\n            // check whether FLP has already set the content density class; do nothing in this case\n            if (document.body.classList.contains(\"sapUiSizeCozy\") || document.body.classList.contains(\"sapUiSizeCompact\")) {\n                this.sContentDensityClass = \"\";\n            } else if (!support.touch) { // apply \"compact\" mode if touch is not supported\n                this.sContentDensityClass = \"sapUiSizeCompact\";\n            } else {\n                // \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Table\n                this.sContentDensityClass = \"sapUiSizeCozy\";\n            }\n        }\n        return this.sContentDensityClass;\n    }\n\n\n}\n"],"file":"Component.js"}