{"version":3,"sources":["../../src/controller/Record.controller.ts"],"names":["value","direct","then","Promise","resolve","body","recover","result","e","thrown","finalizer","bind","f","args","i","arguments","length","apply","reject","ButtonType","DialogType","FlexAlignItems","Action","BaseController","getAffectedPropertiesByChangedProperties","getAllODataNavigationPropertiesForSapText","getEntitySetNameByBindingContextPath","Validator","ValueHelp","isInstanceOf","debounce","FormFieldGroup","DEFAULT_UUID","RecordController","onInit","validator","getView","setModel","oODataModel","oAttachmentODataModel","oOwnerComponent","getModel","oAttachmentModel","JSONModel","items","x","ControlMessageProcessor","messageManager","sap","ui","getCore","getMessageManager","registerMessageProcessor","getMessageModel","registerObject","oRouter","getRoute","attachPatternMatched","onRouteMatched","attachPropertyChange","handleModelPropertyChange","submitChanges","onExit","detachPropertyChange","oEvent","oDraftContext","oDraftController","getDraftContext","oContext","getParameter","hasDraft","oMetaModel","getMetaModel","getODataEntitySet","getPath","pendingChanges","getPendingChanges","getBindingContext","defectPath","replace","oCurrentChanges","aChangedProperties","Object","keys","filter","key","aAffectedProperties","aAffectedSmartFields","getControlsByFieldGroupId","oControl","SmartField","oSmartField","oProperty","getDataProperty","property","indexOf","name","triggerSubmitChanges","noShowSuccessToast","noShowResponse","noBlockUI","failedMsg","successMsg","forEach","_oFactory","reBind","valueListChanged","oControlEvent","getSource","oBindingContext","oModel","changes","getParameters","sPropertyName","sPropertyValue","getValue","enhancedChanges","map","sProperty","sPropertyPath","sValue","item","setProperty","firePropertyChange","reason","ChangeReason","Change","path","context","onEdit","createEditDraftEntity","oEntryContext","navigateToDefectRecord","oError","sErrorMessage","parseError","response","MessageBox","error","title","translate","onSave","removeAllMessages","validateFieldGroup","VALIDATION","invalid","focusFirstError","requestUserConfirmation","confirmed","bWasDraft","getProperty","setBusy","getDraftController","prepareDraftEntity","activateDraftEntity","MessageToast","show","onDiscardDraft","bHasActiveEntity","sDefectInternalID","warning","actions","OK","CANCEL","emphasizedAction","onClose","sAction","remove","success","sPathNonDraft","createKey","DefectInternalID","DraftUUID","IsActiveEntity","navigateBack","onCreateDefect","oModelContext","oSubmitDialog","Dialog","type","Message","content","VerticalLayout","Label","text","CheckBox","selected","beginButton","Button","Emphasized","press","bCreateDefectWithTemplate","Core","byId","getSelected","sDefectCategory","sLayoutVariant","oPredefinedValues","getTemplateValues","ZZ1_NC_LAYOUT_VARIANT_NIT","DefectCategory","navigateToCreateDefect","close","destroy","endButton","open","onPrintBlockingCard","oDataModelManageDefect","callFunction","method","urlParameters","onMessagePopoverPress","source","getMessagePopover","messagePopover","openBy","isValueEqual","value1","value2","onSelectRadioButton","propertyName","iIndex","oRadioButtonGroup","oSelectedButton","getButtons","sSelectedValue","data","sAbsoluteModelPropertyPath","setValueState","undefined","onSelectCheckbox","oCheckbox","sValidationName","aAllCheckboxesForSameVirtualField","c","isA","validateFieldCheckbox","onValueHelpRequested","showValueHelp","onElementHiddenResetValue","getVisible","oPropertyBinding","getBinding","setValue","oArguments","sDefectRecordPath","defectRecordPath","metadataLoaded","aNavigationPropertiesForText","aNavigationPropertiesForCustomFields","startsWith","aNavigationPropertiesForStandardFields","aNavigationPropertiesToExpand","concat","sort","read","$expand","join","bindElement","parameters","expand","all","initDefectCategory","_readAttachments","onBeforeStartAttachmentUpload","sFileName","addHeaderParameter","UploadCollectionParameter","btoa","encodeURIComponent","getSecurityToken","onCompletedAttachmentUpload","oAttachmentData","getData","aFiles","oFile","status","oResponse","JSON","parse","responseRaw","unshift","_mapOriginalContentToAttachmentItem","d","Error","responseText","setData","refresh","onDeleteAttachmentUpload","oItem","oItemData","getObject","sAttachmentUri","FileId","ApplicationId","Filename","Documentnumber","Documenttype","Documentpart","Documentversion","headers","aFilteredItems","onTakePictureAsAttachment","oVideoElement","oStream","sVideoPlayerId","Date","getTime","dialog","busy","pause","canvas","document","createElement","ctx","getContext","width","videoWidth","height","videoHeight","drawImage","contentType","toBlob","blob","_uploadFile","File","VBox","alignItems","Center","fitContainer","HTML","afterOpen","getElementById","navigator","mediaDevices","getUserMedia","audio","video","facingMode","stream","isOpen","getTracks","track","stop","srcObject","afterClose","src","oAttachmentUpl","dataTransfer","DataTransfer","add","oFileUploader","_oFileUploader","oFileUpload","files","dispatchEvent","window","Event","bIsActiveEntity","ObjectType","ObjectKey","SemanticObjectType","IsDraft","stringify","AttachmentFramework","oData","aItems","results","dCreatedAt","CreatedAt","parseInt","substr","bThumbnailForContentTypeSupported","ContentType","toLowerCase","thumbnailUrl","__metadata","media_src","_removeHostFromSapUrl","createdAt","attributes","_formatDate","visible","_formatFileSize","Filesize","markers","AttachmentStatus","sLink","substring","dDate","DateFormat","getDateTimeInstance","style","format","FileSizeFormat","getInstance","binaryFilesize","maxFractionDigits","maxIntegerDigits","defectCategory","layoutVariant","sFragmentName","Fragment","load","id","getId","controller","oPanel","removeAllContent","addContent","showMessageBox","oOptions","msgFn","confirm","message","sMaterial","getTemplateProperties","fieldProperites","TEMPLATE","getMetadata","getName","uniqueSort","aTemplateProperties","aTemplateAndAffectedProperties","reduce","oValueMap","oField","oMessagePopover","addDependent"],"mappings":"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","sourcesContent":["import Button from \"sap/m/Button\";\nimport CheckBox from \"sap/m/CheckBox\";\nimport Dialog from \"sap/m/Dialog\";\nimport Label from \"sap/m/Label\";\nimport { ButtonType, DialogType, FlexAlignItems } from \"sap/m/library\";\nimport UploadCollection from \"sap/m/UploadCollection\";\nimport HTML from \"sap/ui/core/HTML\";\nimport VBox from \"sap/m/VBox\";\nimport FileUploader from \"sap/ui/unified/FileUploader\";\nimport MessageBox, { Action } from \"sap/m/MessageBox\";\nimport MessagePopover from \"sap/m/MessagePopover\";\nimport MessageToast from \"sap/m/MessageToast\";\nimport Panel from \"sap/m/Panel\";\nimport RadioButtonGroup from \"sap/m/RadioButtonGroup\";\nimport UploadCollectionItem from \"sap/m/UploadCollectionItem\";\nimport UploadCollectionParameter from \"sap/m/UploadCollectionParameter\";\nimport Event from \"sap/ui/base/Event\";\nimport SmartField from \"sap/ui/comp/smartfield/SmartField\";\nimport Control from \"sap/ui/core/Control\";\nimport Core from \"sap/ui/core/Core\";\nimport DateFormat from \"sap/ui/core/format/DateFormat\";\nimport FileSizeFormat from \"sap/ui/core/format/FileSizeFormat\";\nimport Fragment from \"sap/ui/core/Fragment\";\nimport ControlMessageProcessor from \"sap/ui/core/message/ControlMessageProcessor\";\nimport MessageManager from \"sap/ui/core/message/MessageManager\";\nimport VerticalLayout from \"sap/ui/layout/VerticalLayout\";\nimport ChangeReason from \"sap/ui/model/ChangeReason\";\nimport Context from \"sap/ui/model/Context\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\nimport ODataPropertyBinding from \"sap/ui/model/odata/ODataPropertyBinding\";\nimport ODataModel from \"sap/ui/model/odata/v2/ODataModel\";\nimport BaseController from \"zqm/nc/recdefectfast/controller/Base.controller\";\nimport {\n    CustomAttachmentDataModel,\n    CustomAttachmentItemModel,\n    OriginalContentKeyModel,\n    OriginalContentModel,\n} from \"zqm/nc/recdefectfast/types/attachment\";\nimport { ErrorResponse, RequestError } from \"zqm/nc/recdefectfast/types/error\";\nimport { ODataV2ResponsePayloadResult } from \"zqm/nc/recdefectfast/types/odata\";\nimport {\n    getAffectedPropertiesByChangedProperties,\n    getAllODataNavigationPropertiesForSapText,\n    getEntitySetNameByBindingContextPath,\n    ODataPropertyMetadataDefinition\n} from \"zqm/nc/recdefectfast/util/ODataHelper\";\nimport Validator from \"zqm/nc/recdefectfast/util/Validator\";\nimport ValueHelp from \"zqm/nc/recdefectfast/util/ValueHelp\";\nimport { isInstanceOf } from \"zqm/nc/recdefectfast/util/types\";\nimport { debounce } from \"zqm/nc/recdefectfast/util/debounce\";\nimport uniqueSort from \"sap/base/util/array/uniqueSort\";\n\nconst enum FormFieldGroup {\n    VALIDATION = \"validation\",\n    TEMPLATE = \"template\",\n}\n\nconst DEFAULT_UUID = \"00000000-0000-0000-0000-000000000000\";\n\n\n/**\n * @namespace zqm.nc.recdefectfast.controller\n */\nexport default class RecordController extends BaseController {\n\n    private validator: Validator;\n    private messageManager: MessageManager;\n    private messagePopover: Promise<MessagePopover>;\n    private defectCategory?: string;\n    private layoutVariant?: string;\n    private oAttachmentODataModel: ODataModel;\n    private oAttachmentModel: JSONModel;\n\n    onInit() {\n        super.onInit();\n\n        this.validator = new Validator(this.getView());\n        this.getView().setModel(this.oODataModel);\n        // register model twice to get another binding context for value helps that allows to compare\n        this.getView().setModel(this.oODataModel, \"vh\");\n        this.oAttachmentODataModel = this.oOwnerComponent.getModel(\"odata-attachment\") as ODataModel;\n        this.oAttachmentModel = new JSONModel(<CustomAttachmentDataModel>{ items: [] });\n        this.getView().setModel(this.oAttachmentModel, \"__attachmentData\");\n\n        // register message manager\n        const x = new ControlMessageProcessor();\n        this.messageManager = sap.ui.getCore().getMessageManager();\n        this.messageManager.registerMessageProcessor(x);\n\n        this.getView().setModel(this.messageManager.getMessageModel(), \"message\");\n        this.messageManager.registerObject(this.getView(), true);\n\n        // init route\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        this.oRouter.getRoute(\"record\").attachPatternMatched(this.onRouteMatched, this);\n\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        this.oODataModel.attachPropertyChange(this.handleModelPropertyChange, this);\n\n        // eslint-disable-next-line @typescript-eslint/no-misused-promises,@typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        this.submitChanges = debounce(this.submitChanges.bind(this), 200);\n    }\n\n    onExit() {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        this.oODataModel.detachPropertyChange(this.handleModelPropertyChange, this);\n    }\n\n    private async handleModelPropertyChange(oEvent: Event) {\n        const oDraftContext = this.oDraftController.getDraftContext();\n        const oContext: Context = oEvent.getParameter(\"context\") as Context;\n        // Ignore all cases which are non-draft\n        if (!oDraftContext.hasDraft(oContext)) {\n            return;\n        }\n\n        const oMetaModel = this.oODataModel.getMetaModel();\n        // for parameters of function imports special paths are introduced in the model, that are not known in the metamodel\n        // as we don't need a merge call for changes to these properties, we can just ignore them\n        if (!oMetaModel.getODataEntitySet(getEntitySetNameByBindingContextPath(oContext.getPath()))) {\n            return;\n        }\n\n        await this.submitChanges();\n    }\n\n    private async submitChanges() {\n        const pendingChanges = this.oODataModel.getPendingChanges();\n        const oContext = this.getView().getBindingContext();\n        const defectPath = oContext.getPath().replace(/^\\/+/, '');\n\n        // get changes & affected fields\n        const oCurrentChanges = pendingChanges[defectPath] || {};\n        const aChangedProperties = Object.keys(oCurrentChanges).filter((key) => key !== \"__metadata\");\n        const aAffectedProperties = getAffectedPropertiesByChangedProperties(this.oODataModel.getMetaModel(), \"C_DefectRecord\", aChangedProperties);\n\n        const aAffectedSmartFields = this.getView().getControlsByFieldGroupId(\"\")\n            .filter((oControl): oControl is SmartField => isInstanceOf<SmartField>(oControl, SmartField))\n            .filter((oSmartField: SmartField) => {\n                const oProperty = oSmartField.getDataProperty() as { property: ODataPropertyMetadataDefinition | null | undefined };\n                return oProperty != null && oProperty.property != null && aAffectedProperties.indexOf((oProperty).property.name) !== -1\n            });\n\n        await this.oDraftController.triggerSubmitChanges({\n            noShowSuccessToast: false,\n            noShowResponse: true,\n            noBlockUI: true,\n            failedMsg: \"\",\n            successMsg: \"\",\n        });\n\n        // Workaround: displayed value of smart fields may be invalid if display value depends on another field\n        // that's why we need to refresh the smart field\n        aAffectedSmartFields.forEach((oSmartField) => {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (oSmartField._oFactory && oSmartField._oFactory.reBind) {\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access,@typescript-eslint/no-unsafe-call\n                oSmartField._oFactory.reBind();\n            }\n        });\n    }\n\n    public valueListChanged(oControlEvent: Event) {\n        // Workaround: there is no model property change event by value help\n        // we need this to submit changes & to update dependent smart fields\n        const oSmartField = oControlEvent.getSource() as SmartField;\n        const oBindingContext = this.getView().getBindingContext();\n        const oModel: ODataModel = oBindingContext.getModel() as ODataModel;\n        const changes = (oControlEvent.getParameters() as {\n            changes: Record<string, string>\n        }).changes;\n\n        const sPropertyName = (oSmartField.getDataProperty() as { property: ODataPropertyMetadataDefinition }).property.name;\n        const sPropertyValue = oSmartField.getValue() as string;\n\n        const enhancedChanges = {\n            [sPropertyName]: sPropertyValue,\n            ...changes,\n        };\n\n        // ensure that all attributes from value list are stored in our model\n        Object\n            .keys(enhancedChanges)\n            .map((sProperty) => {\n                const sPropertyPath = oBindingContext.getPath(sProperty);\n                const sValue = enhancedChanges[sProperty];\n\n                return {\n                    sProperty,\n                    sPropertyPath,\n                    sValue,\n                };\n            })\n            .forEach((item) => {\n                oModel.setProperty(item.sPropertyPath, item.sValue);\n                oModel.firePropertyChange({\n                    reason: ChangeReason.Change,\n                    path: item.sProperty,\n                    value: item.sValue as unknown as object, // provided types are wrong\n                    context: oBindingContext\n                });\n            })\n    }\n\n    public async onEdit() {\n        try {\n            const { context: oEntryContext } = await this.oDraftController.createEditDraftEntity(this.getView().getBindingContext(), true) as { context: Context, data: object, response: object };\n            this.navigateToDefectRecord(oEntryContext.getPath());\n        } catch (oError: RequestError | Error | ErrorResponse | unknown) {\n            const sErrorMessage = this.parseError((oError as ErrorResponse).response != null ? (oError as ErrorResponse).response : oError);\n\n            MessageBox.error(sErrorMessage, {\n                title: this.translate(\"common_text_error\"),\n            });\n        }\n    }\n\n    public async onSave() {\n        this.messageManager.removeAllMessages();\n\n        // validate input fields\n        const invalid = await this.validator.validateFieldGroup(FormFieldGroup.VALIDATION);\n\n        if (invalid) {\n            this.validator.focusFirstError(FormFieldGroup.VALIDATION);\n            return;\n        }\n        const confirmed = await this.requestUserConfirmation();\n        if (!confirmed) {\n            return;\n        }\n\n        const oContext = this.getView().getBindingContext();\n        const bWasDraft = !oContext.getProperty(\"HasActiveEntity\");\n        this.getView().setBusy(true);\n        try {\n            await this.oDraftController.triggerSubmitChanges({\n                noShowSuccessToast: false,\n                noShowResponse: true,\n                noBlockUI: true,\n                failedMsg: \"\",\n                successMsg: \"\",\n            });\n\n            await this.oOwnerComponent.getDraftController().prepareDraftEntity(oContext);\n            const { context: oEntryContext } = await this.oOwnerComponent.getDraftController().activateDraftEntity(oContext, \"to_DefectLongTextTP\") as { context: Context, data: object, response: object };\n            this.getView().setBusy(false);\n            this.navigateToDefectRecord(oEntryContext.getPath());\n            MessageToast.show(this.translate(bWasDraft ? \"defect_status_create_success\" : \"defect_status_update_success\"));\n        } catch (oError: ErrorResponse | RequestError | Error | unknown) {\n            this.getView().setBusy(false);\n            const sErrorMessage = this.parseError(oError);\n\n            MessageBox.error(sErrorMessage, {\n                title: this.translate(\"defect_status_save_error\"),\n            });\n        }\n    }\n\n    public onDiscardDraft() {\n        const oContext = this.getView().getBindingContext();\n        const bHasActiveEntity = oContext.getProperty(\"HasActiveEntity\") as boolean;\n        const sDefectInternalID = oContext.getProperty(\"DefectInternalID\") as string;\n\n        MessageBox.warning(bHasActiveEntity ? this.translate(\"defect_discard_defect_changes_text\") : this.translate(\"defect_discard_defect_draft_text\"), {\n            title: bHasActiveEntity ? this.translate(\"defect_discard_defect_changes_title\") : this.translate(\"defect_discard_defect_draft_title\"),\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore: missing type actions\n            actions: [Action.OK, Action.CANCEL],\n            emphasizedAction: Action.OK,\n            onClose: (sAction: string) => {\n                if (sAction === Action.OK) {\n                    this.oODataModel.remove(oContext.getPath(), {\n                        success: () => {\n                            if (bHasActiveEntity) {\n                                // there is a non-draft version -> navigate to it\n                                const sPathNonDraft = this.oODataModel.createKey(\"/C_DefectRecord\", {\n                                    DefectInternalID: sDefectInternalID,\n                                    DraftUUID: DEFAULT_UUID,\n                                    IsActiveEntity: true\n                                });\n                                this.navigateToDefectRecord(sPathNonDraft, true);\n                            } else {\n                                // back to launchpad\n                                this.navigateBack();\n                            }\n                        },\n                        error: (oError: RequestError | Error | unknown) => {\n                            const sErrorMessage = this.parseError(oError);\n\n                            MessageBox.error(sErrorMessage, {\n                                title: this.translate(\"defect_discard_status_error\"),\n                            });\n                        }\n                    });\n                }\n            }\n        });\n    }\n\n    public onCreateDefect() {\n        const oModelContext = this.getView().getBindingContext();\n\n        const oSubmitDialog = new Dialog({\n            type: DialogType.Message,\n            title: this.translate(\"defect_create_new_dialog_title\"),\n            content: [\n                new VerticalLayout({\n                    content: [\n                        new Label({\n                            text: this.translate(\"defect_create_new_dialog_text\"),\n                        }),\n                        new CheckBox(\"createDefectWithTemplate\", {\n                            text: this.translate(\"defect_create_new_dialog_current_as_template\"),\n                            selected: true\n                        })\n                    ]\n                })\n            ],\n            beginButton: new Button({\n                type: ButtonType.Emphasized,\n                text: this.translate(\"common_action_create\"),\n                press: () => {\n                    const bCreateDefectWithTemplate = (Core.byId(\"createDefectWithTemplate\") as CheckBox).getSelected();\n                    oSubmitDialog.setBusy(true);\n                    const sDefectCategory = oModelContext.getProperty(\"DefectCategory\") as string;\n                    const sLayoutVariant = oModelContext.getProperty(\"ZZ1_NC_LAYOUT_VARIANT_NIT\") as string;\n\n                    const oPredefinedValues = {\n                        ...(bCreateDefectWithTemplate ? this.getTemplateValues() : {}),\n                        ZZ1_NC_LAYOUT_VARIANT_NIT: sLayoutVariant,\n                        DefectCategory: sDefectCategory\n                    };\n\n                    this.navigateToCreateDefect(oPredefinedValues, false);\n                    oSubmitDialog.close();\n                    oSubmitDialog.destroy();\n                }\n            }),\n            endButton: new Button({\n                text: this.translate(\"common_action_cancel\"),\n                press: () => {\n                    oSubmitDialog.close();\n                    oSubmitDialog.destroy();\n                }\n            })\n        });\n\n        oSubmitDialog.open();\n\n    }\n\n    public onPrintBlockingCard() {\n        const oDataModelManageDefect = this.oOwnerComponent.getModel(\"odata-manage-defect\") as ODataModel;\n        const oModelContext = this.getView().getBindingContext();\n        const sDefectInternalID = oModelContext.getProperty(\"DefectInternalID\") as string;\n\n        const oSubmitDialog = new Dialog({\n            type: DialogType.Message,\n            title: this.translate(\"blocking_card_print_dialog_title\"),\n            content: [\n                new VerticalLayout({\n                    content: [\n                        new Label({\n                            text: this.translate(\"blocking_card_print_dialog_text\"),\n                        })\n                    ]\n                })\n            ],\n            beginButton: new Button({\n                type: ButtonType.Emphasized,\n                text: this.translate(\"common_action_print\"),\n                press: () => {\n                    oSubmitDialog.setBusy(true);\n\n                    oDataModelManageDefect.callFunction(\"/C_DefectMng_Print_Blocking_Card\", {\n                        method: \"POST\",\n                        urlParameters: {\n                            \"DefectInternalId\": sDefectInternalID\n                        },\n                        success: () => {\n                            oSubmitDialog.setBusy(false);\n                            oSubmitDialog.close();\n                            oSubmitDialog.destroy();\n                            MessageToast.show(this.translate(\"blocking_card_print_status_success\"));\n                        },\n                        error: (oError: RequestError | Error | unknown) => {\n                            const sErrorMessage = this.parseError(oError);\n                            oSubmitDialog.setBusy(false);\n\n                            MessageBox.error(sErrorMessage, {\n                                title: this.translate(\"blocking_card_print_status_error\"),\n                            });\n                        }\n                    });\n                }\n            }),\n            endButton: new Button({\n                text: this.translate(\"common_action_cancel\"),\n                press: () => {\n                    oSubmitDialog.close();\n                    oSubmitDialog.destroy();\n                }\n            })\n        });\n\n        oSubmitDialog.open();\n    }\n\n    public async onMessagePopoverPress(oEvent: Event) {\n        const source = oEvent.getSource() as Control;\n        const messagePopover = await this.getMessagePopover();\n        messagePopover.openBy(source);\n    }\n\n    public isValueEqual(value1: string, value2: string) {\n        return value1 === value2;\n    }\n\n    public onSelectRadioButton(oEvent: Event, propertyName: string) {\n        const iIndex = oEvent.getParameter(\"selectedIndex\") as number;\n        const oRadioButtonGroup: RadioButtonGroup = oEvent.getSource() as RadioButtonGroup;\n\n        const oSelectedButton = oRadioButtonGroup.getButtons()[iIndex];\n        const sSelectedValue = oSelectedButton.data(\"value\") as string;\n\n        const sAbsoluteModelPropertyPath = oRadioButtonGroup.getBindingContext().getPath(propertyName);\n        const oModel = oRadioButtonGroup.getBindingContext().getModel() as ODataModel;\n\n        oModel.setProperty(sAbsoluteModelPropertyPath, sSelectedValue);\n        oModel.firePropertyChange({\n            reason: ChangeReason.Change,\n            path: propertyName,\n            value: sSelectedValue as unknown as object, // provided types are wrong\n            context: oRadioButtonGroup.getBindingContext()\n        });\n\n        // reset validation state\n        oRadioButtonGroup.setValueState(undefined);\n    }\n\n    public onSelectCheckbox(oEvent: Event) {\n        const oCheckbox: CheckBox = oEvent.getSource() as CheckBox;\n        const sValidationName = oCheckbox.data(\"validationname\") as string | undefined;\n\n        if (!sValidationName) {\n            return;\n        }\n\n        const aAllCheckboxesForSameVirtualField = this.getView()\n            .getControlsByFieldGroupId(sValidationName)\n            .filter(c => c.isA([\"sap.m.CheckBox\"])) as Array<CheckBox>;\n\n        aAllCheckboxesForSameVirtualField.forEach((c) => {\n            this.validator.validateFieldCheckbox(c);\n        });\n    }\n\n    public async onValueHelpRequested(oEvent: Event, sPropertyName: string) {\n        await ValueHelp.showValueHelp(this.getView().getBindingContext(), sPropertyName);\n    }\n\n    public onElementHiddenResetValue(oEvent: Event) {\n        const oControl: Control = oEvent.getSource() as Control;\n        if (!oControl.getVisible()) {\n            const oPropertyBinding = oControl.getBinding(\"value\") as ODataPropertyBinding;\n            oPropertyBinding.setValue(\"\");\n        }\n    }\n\n    private async onRouteMatched(oEvent: Event) {\n        const oArguments = oEvent.getParameter(\"arguments\") as { defectRecordPath: string };\n        const sDefectRecordPath = \"/\" + oArguments.defectRecordPath;\n        this.getView().setBusy(true);\n\n        // determine navigation properties that we have to expand to get the texts or data\n        await this.oODataModel.metadataLoaded();\n        const aNavigationPropertiesForText = getAllODataNavigationPropertiesForSapText(this.oODataModel.getMetaModel(), \"C_DefectRecord\");\n        const aNavigationPropertiesForCustomFields = aNavigationPropertiesForText.filter((item) => item.startsWith(\"to_ZZ1\"));\n        const aNavigationPropertiesForStandardFields = [\"to_DefectLongTextTP\", \"to_ProductionOrderStdVH\", \"to_ProdnOrdOpBySemKeyStdVH\"];\n        const aNavigationPropertiesToExpand = [].concat(aNavigationPropertiesForCustomFields, aNavigationPropertiesForStandardFields).sort();\n\n        // read defect\n        this.oODataModel.read(sDefectRecordPath, {\n            urlParameters: {\n                $expand: aNavigationPropertiesToExpand.join(\",\")\n            },\n            success: async () => {\n                this.getView().bindElement({\n                    path: sDefectRecordPath,\n                    parameters: {\n                        expand: aNavigationPropertiesToExpand.join(\",\")\n                    }\n                });\n\n                const sDefectCategory = this.oODataModel.getProperty(sDefectRecordPath + \"/DefectCategory\") as string | null;\n                let sLayoutVariant = this.oODataModel.getProperty(sDefectRecordPath + \"/ZZ1_NC_LAYOUT_VARIANT_NIT\") as string | null;\n\n                if (!sLayoutVariant) {\n                    // set layout variant for existing errors\n                    sLayoutVariant = \"STANDARD\";\n                    this.oODataModel.setProperty(sDefectRecordPath + \"/ZZ1_NC_LAYOUT_VARIANT_NIT\", sLayoutVariant);\n                }\n\n                try {\n                    await Promise.all([\n                        this.initDefectCategory(sDefectCategory, sLayoutVariant),\n                        this._readAttachments()\n                    ])\n                } catch (error: Error | unknown) {\n                    const sErrorMessage = this.parseError(error);\n                    MessageBox.error(sErrorMessage, {\n                        title: this.translate(\"common_text_error\"),\n                    });\n                } finally {\n                    this.getView().setBusy(false);\n                }\n\n            },\n            error: (error: Error | unknown) => {\n                const sErrorMessage = this.parseError(error);\n                MessageBox.error(sErrorMessage, {\n                    title: this.translate(\"common_text_error\"),\n                });\n            }\n        });\n\n    }\n\n    public onBeforeStartAttachmentUpload(oEvent: Event) {\n        const oContext = this.getView().getBindingContext();\n        const sDefectInternalID = oContext.getProperty(\"DefectInternalID\") as string;\n\n        const sFileName = oEvent.getParameter(\"fileName\") as string;\n        const addHeaderParameter = oEvent.getParameter(\"addHeaderParameter\") as (parameter: UploadCollectionParameter) => void;\n\n        addHeaderParameter(new UploadCollectionParameter({\n            name: \"objectKey\", value: btoa(encodeURIComponent(sDefectInternalID))\n        }));\n        addHeaderParameter(new UploadCollectionParameter({\n            name: \"objectType\", value: \"QFGEN\"\n        }));\n        addHeaderParameter(new UploadCollectionParameter({\n            name: \"documentType\", value: \"A03\"\n        }));\n        addHeaderParameter(new UploadCollectionParameter({\n            name: \"documentNumber\", value: \"\"\n        }));\n        addHeaderParameter(new UploadCollectionParameter({\n            name: \"documentVersion\", value: \"\"\n        }));\n        addHeaderParameter(new UploadCollectionParameter({\n            name: \"documentPart\", value: \"\"\n        }));\n        addHeaderParameter(new UploadCollectionParameter({\n            name: \"semanticobjecttype\", value: \"\"\n        }));\n        addHeaderParameter(new UploadCollectionParameter({\n            name: \"Accept\", value: \"application/json\"\n        }));\n        addHeaderParameter(new UploadCollectionParameter({\n            name: \"slug\", value: btoa(encodeURIComponent(sFileName))\n        }));\n        addHeaderParameter(new UploadCollectionParameter({\n            name: \"x-csrf-token\", value: this.oAttachmentODataModel.getSecurityToken()\n        }));\n    }\n\n\n    public onCompletedAttachmentUpload(oEvent: Event) {\n        const oAttachmentData = this.oAttachmentModel.getData() as CustomAttachmentDataModel;\n        const aFiles = oEvent.getParameter(\"files\") as Array<{\n            fileName: string,\n            status: number,\n            responseRaw: string\n        }>;\n\n        aFiles.forEach((oFile) => {\n            try {\n                if (oFile.status === 200 || oFile.status === 201) {\n                    const oResponse = JSON.parse(oFile.responseRaw) as ODataV2ResponsePayloadResult<OriginalContentModel>;\n                    oAttachmentData.items.unshift(this._mapOriginalContentToAttachmentItem(oResponse.d));\n                } else if (oFile.responseRaw) {\n                    throw new Error(this.parseError({\n                        responseText: oFile.responseRaw\n                    }));\n                } else {\n                    throw new Error();\n                }\n\n            } catch (error: Error | unknown) {\n                const sErrorMessage = this.parseError(error);\n                MessageBox.error(sErrorMessage, {\n                    title: this.translate(\"defect_attachment_upload_error\"),\n                });\n            }\n\n        });\n\n        this.oAttachmentModel.setData(oAttachmentData, false);\n        this.oAttachmentModel.refresh(true);\n    }\n\n    public onDeleteAttachmentUpload(oEvent: Event) {\n        const oContext = this.getView().getBindingContext();\n        const sDefectInternalID = oContext.getProperty(\"DefectInternalID\") as string;\n\n        const oItem = oEvent.getParameter(\"item\") as UploadCollectionItem;\n        const oItemData = oItem.getBindingContext(\"__attachmentData\").getObject() as CustomAttachmentItemModel;\n\n        const sAttachmentUri = this.oAttachmentODataModel.createKey(\"/OriginalContentSet\", <OriginalContentKeyModel>{\n            FileId: oItemData.FileId,\n            ApplicationId: oItemData.ApplicationId,\n            Filename: oItemData.Filename,\n            Documentnumber: oItemData.Documentnumber,\n            Documenttype: oItemData.Documenttype,\n            Documentpart: oItemData.Documentpart,\n            Documentversion: oItemData.Documentversion,\n        });\n\n        this.oAttachmentODataModel.remove(sAttachmentUri, {\n            // this is needed -> otherwise draft handling does not work\n            headers: {\n                \"objectkey\": btoa(encodeURIComponent(sDefectInternalID)),\n                \"objecttype\": \"QFGEN\",\n                \"semanticobjecttype\": \"\",\n                \"markfordeletion\": \"true\"\n            },\n            success: () => {\n                const { items } = this.oAttachmentModel.getData() as CustomAttachmentDataModel;\n                const aFilteredItems = items.filter((item) => item !== oItemData);\n                this.oAttachmentModel.setData(<CustomAttachmentDataModel>{ items: aFilteredItems });\n            },\n            error: (oError: RequestError | Error | unknown) => {\n                const sErrorMessage = this.parseError(oError);\n\n                MessageBox.error(sErrorMessage, {\n                    title: this.translate(\"defect_attachment_delete_error\"),\n                });\n            }\n        });\n    }\n\n    public onTakePictureAsAttachment() {\n        let oVideoElement: HTMLVideoElement | undefined = undefined;\n        let oStream: MediaStream | undefined = undefined;\n        const sVideoPlayerId = `video-player-${new Date().getTime()}`;\n\n        const dialog = new Dialog({\n            busy: true,\n            title: this.translate(\"take_picture_dialog_title\"),\n            beginButton: new Button({\n                text: this.translate(\"common_action_capture\"),\n                type: ButtonType.Emphasized,\n                press: () => {\n                    dialog.setBusy(true);\n                    oVideoElement.pause();\n\n                    // // create a canvas and draw image by video\n                    const canvas = document.createElement('canvas');\n                    const ctx = canvas.getContext('2d');\n                    canvas.width = oVideoElement.videoWidth;\n                    canvas.height = oVideoElement.videoHeight;\n                    ctx.drawImage(oVideoElement, 0, 0);\n\n                    // request a Blob from the canvas\n                    const contentType = \"image/jpeg\";\n                    canvas.toBlob((blob) => {\n                        this._uploadFile(new File([blob], \"image.jpg\", { type: contentType }));\n                        dialog.close();\n                    }, contentType);\n                }\n            }),\n            content: [\n                new VBox({\n                    alignItems: FlexAlignItems.Center,\n                    fitContainer: true,\n                    items: [\n                        new HTML({\n                            content: `<video id='${sVideoPlayerId}' autoplay/>`,\n                        }),\n                    ]\n                }),\n            ],\n            afterOpen: () => {\n                oVideoElement = document.getElementById(sVideoPlayerId) as HTMLVideoElement;\n\n                navigator.mediaDevices.getUserMedia({\n                    audio: false,\n                    video: {\n                        facingMode: 'environment'\n                    },\n                })\n                    .then((stream) => {\n                        // if this no longer open -> clean up stream and cancel\n                        if (!dialog.isOpen()) {\n                            stream.getTracks().forEach(track => track.stop());\n                            return;\n                        }\n\n                        dialog.setBusy(false);\n                        oStream = stream;\n                        if (oVideoElement) {\n                            oVideoElement.srcObject = stream;\n                        }\n\n                    })\n                    .catch((e) => {\n                        dialog.setBusy(false);\n                        dialog.close();\n\n                        const sErrorMessage = this.parseError(e);\n\n                        MessageBox.error(sErrorMessage, {\n                            title: this.translate(\"common_text_error\"),\n                        });\n                    })\n            },\n            afterClose: () => {\n                dialog.close();\n                if (oStream) {\n                    oStream.getTracks().forEach(track => track.stop());\n                    oStream = undefined;\n                    oVideoElement = undefined;\n                }\n                if (oVideoElement) {\n                    oVideoElement.pause();\n                    oVideoElement.src = \"\";\n                    oVideoElement.srcObject = null;\n                    oVideoElement = undefined;\n                }\n            },\n            endButton: new Button({\n                text: this.translate(\"common_action_cancel\"),\n                press: function () {\n                    dialog.close();\n                }\n            })\n        });\n\n        dialog.open();\n    }\n\n    private _uploadFile(oFile: File) {\n        const oAttachmentUpl = this.getView().byId(\"attachmentServiceFileUpload\") as UploadCollection;\n        // workaround: there is no API to upload a file programmatically, that's why we have to simulate the user file dialog action\n\n        // prepare files\n        const dataTransfer = new DataTransfer()\n        dataTransfer.items.add(oFile)\n\n        // replace files on input\n        const oFileUploader: FileUploader = (oAttachmentUpl as any)._oFileUploader;\n        const oFileUpload: HTMLInputElement = (oFileUploader as any).oFileUpload;\n        oFileUpload.files = dataTransfer.files;\n\n        // trigger change event\n        oFileUpload.dispatchEvent(new window.Event('change'));\n    }\n\n    private async _readAttachments() {\n        const oContext = this.getView().getBindingContext();\n        const sDefectInternalID = oContext.getProperty(\"DefectInternalID\") as string;\n        const bIsActiveEntity = oContext.getProperty(\"IsActiveEntity\") as boolean;\n\n        await new Promise<void>((resolve, reject) => {\n            this.oAttachmentODataModel.callFunction(\"/GetAllOriginals\", {\n                method: \"GET\",\n                urlParameters: {\n                    ObjectType: \"QFGEN\",\n                    ObjectKey: sDefectInternalID,\n                    SemanticObjectType: \"\",\n                    IsDraft: JSON.stringify(!bIsActiveEntity),\n                    AttachmentFramework: \"\"\n                },\n                success: (oData: { results: Array<OriginalContentModel> }) => {\n                    const aItems = oData.results.map((oItem) => this._mapOriginalContentToAttachmentItem(oItem));\n\n                    this.oAttachmentModel.setData({ items: aItems });\n                    this.oAttachmentModel.refresh(true);\n                    resolve();\n                },\n                error: reject\n            })\n        });\n\n    }\n\n    private _mapOriginalContentToAttachmentItem(oFile: OriginalContentModel): CustomAttachmentItemModel {\n        const dCreatedAt = oFile.CreatedAt == null ? null : oFile.CreatedAt instanceof Date ? oFile.CreatedAt : new Date(parseInt(oFile.CreatedAt.substr(6)));\n        const bThumbnailForContentTypeSupported = typeof oFile.ContentType === \"string\" ? oFile.ContentType.toLowerCase().indexOf(\"image/\") === 0 : false;\n\n        return {\n            FileId: oFile.FileId,\n            ApplicationId: oFile.ApplicationId,\n            Filename: oFile.Filename,\n            Documentnumber: oFile.Documentnumber ? oFile.Documentnumber : \"\",\n            Documenttype: oFile.Documenttype,\n            Documentversion: oFile.Documentversion ? oFile.Documentversion : \"\",\n            Documentpart: oFile.Documentpart ? oFile.Documentpart : \"\",\n            thumbnailUrl: bThumbnailForContentTypeSupported && oFile.__metadata.media_src ? this._removeHostFromSapUrl(oFile.__metadata.media_src) : null,\n            createdAt: dCreatedAt != null ? dCreatedAt.getTime() : null,\n            attributes: [\n                {\n                    title: this.oAttachmentODataModel.getProperty(\"/#OriginalContent/CreatedAt/@sap:label\") as string,\n                    text: this._formatDate(dCreatedAt),\n                    visible: true\n                },\n                {\n                    title: this.oAttachmentODataModel.getProperty(\"/#OriginalContent/Filesize/@sap:label\") as string,\n                    text: this._formatFileSize(oFile.Filesize),\n                    visible: true\n                }\n            ],\n            markers: oFile.AttachmentStatus !== \"DRAFT\" ? [] : [{\n                type: \"Draft\"\n            }]\n        };\n    }\n\n    public _removeHostFromSapUrl(sLink: string) {\n        return sLink.substring(sLink.indexOf(\"/sap/opu/odata/\"), sLink.length);\n    }\n\n    private _formatDate(dDate: Date) {\n        return DateFormat.getDateTimeInstance({\n            style: \"medium\"\n        }).format(dDate);\n    }\n\n    private _formatFileSize(sValue: string | number):\n        string {\n        return FileSizeFormat.getInstance({\n            binaryFilesize: false,\n            maxFractionDigits: 2,\n            maxIntegerDigits: 3\n        }).format(sValue);\n    }\n\n    private async initDefectCategory(sDefectCategory: string, sLayoutVariant?: string) {\n        // abort if already initialized\n        if (this.defectCategory === sDefectCategory && this.layoutVariant === sLayoutVariant) {\n            return;\n        }\n\n        this.defectCategory = sDefectCategory;\n        this.layoutVariant = sLayoutVariant;\n        const sFragmentName = `zqm.nc.recdefectfast.fragment.form.${this.defectCategory}-${this.layoutVariant}-Form`;\n\n        const oControl: Control = (await Fragment.load({\n            id: this.getView().getId(),\n            controller: this,\n            name: sFragmentName\n        })) as Control;\n\n        const oPanel = this.getView().byId(\"form-fragment-content\") as Panel;\n        oPanel.removeAllContent();\n        oPanel.addContent(oControl);\n    }\n\n    private async showMessageBox(oOptions: {type?: \"confirm\" | \"warning\", message: string, title?: string, }):Promise<boolean> {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        const msgFn = oOptions.type === \"confirm\" ? MessageBox.confirm : oOptions.type === \"warning\" ? MessageBox.warning : MessageBox.confirm;\n\n        return new Promise(resolve => {\n            msgFn(oOptions.message, {\n                title: oOptions.title,\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore: missing type actions\n                actions: [Action.OK, Action.CANCEL],\n                emphasizedAction: Action.OK,\n                onClose: (sAction: string) => {\n                    resolve(sAction === Action.OK);\n                }\n            });\n        });\n    }\n\n    private async requestUserConfirmation(): Promise<boolean> {\n        const oContext = this.getView().getBindingContext();\n\n        const sDefectCategory = oContext.getProperty(\"DefectCategory\") as string | null;\n        const sLayoutVariant = oContext.getProperty(\"ZZ1_NC_LAYOUT_VARIANT_NIT\") as string | null;\n        const sMaterial = oContext.getProperty(\"Material\") as string | null;\n\n       if (sDefectCategory === \"ZL\" && sLayoutVariant === \"STANDARD\" && !sMaterial) {\n           // STAP Warehouse: confirmation for missing material\n           return this.showMessageBox({\n               type: \"confirm\",\n               message: this.translate(\"defect_confirm_missing_material\")\n           });\n       }\n\n        return true;\n    }\n\n\n    private getTemplateProperties(): Array<string> {\n        const fieldProperites: Array<string> = this.getView()\n            .getControlsByFieldGroupId(FormFieldGroup.TEMPLATE)\n            .filter((c) => [\"sap.m.Input\", \"sap.m.ComboBox\", \"sap.m.Switch\", \"sap.ui.comp.smartfield.SmartField\"].indexOf(c.getMetadata().getName()) !== -1)\n            .map((c) => {\n\n                switch (c.getMetadata().getName()) {\n                    case \"sap.m.ComboBox\":\n                    case \"sap.m.Input\":\n                    case \"sap.ui.comp.smartfield.SmartField\": {\n                        return c.getBinding(\"value\").getPath();\n                    }\n                    case \"sap.m.Switch\":\n                        return c.getBinding(\"state\").getPath();\n                    default: {\n                        return;\n                    }\n                }\n            })\n            .filter((sPropertyPath): sPropertyPath is string => sPropertyPath != null);\n\n        return uniqueSort(fieldProperites) as Array<string>;\n    }\n\n    private getTemplateValues(): Record<string, string | number | boolean> {\n        const aTemplateProperties = this.getTemplateProperties();\n        const aTemplateAndAffectedProperties = getAffectedPropertiesByChangedProperties(this.oODataModel.getMetaModel(), \"C_DefectRecord\", aTemplateProperties);\n\n        return aTemplateAndAffectedProperties\n            .filter((sPropertyPath): sPropertyPath is string => sPropertyPath != null)\n            .map((sPropertyPath) => ({\n                property: sPropertyPath,\n                value: this.getView().getBindingContext().getProperty(sPropertyPath) as string | number | boolean,\n            }))\n            .reduce<Record<string, string | number | boolean>>((oValueMap, oField) => ({\n                ...oValueMap,\n                [oField.property]: oField.value\n            }), {});\n    }\n\n    private getMessagePopover(): Promise<MessagePopover> {\n        // create popover lazily (singleton)\n        if (this.messagePopover == null) {\n            this.messagePopover = Fragment.load({\n                id: this.getView().getId(),\n                name: \"zqm.nc.recdefectfast.fragment.MessagePopover\"\n            }).then((oMessagePopover: MessagePopover) => {\n                this.getView().addDependent(oMessagePopover);\n                return oMessagePopover;\n            });\n\n        }\n        return this.messagePopover;\n    }\n\n\n}\n"],"file":"Record.controller.js"}