{"version":3,"sources":["../../src/util/Validator.ts"],"names":["value","then","direct","Promise","resolve","body","recover","result","e","getScrollDelegate","ValueState","isInstanceOf","Validator","view","fieldGroup","inputs","getFields","all","map","input","validateField","validationErrors","some","Boolean","firstErrorInput","find","getValueState","Error","focus","oScrollEnablement","scrollToElement","getDomRef","getControlsByFieldGroupId","filter","c","isA","surroundedByParent","uiElement","name","getParent","RadioButtonGroup","validateFieldRadioButton","CheckBox","validateFieldCheckbox","oBinding","getBinding","oValueType","getType","sDataProperty","getPath","vRawValue","getValue","vUiValue","SmartField","checkValuesValidity","error","TypeError","console","bMandatory","getMandatory","valueAsBoolean","data","bValueMissing","getDataType","Number","sMessage","getResourceBundleText","oException","ValidateException","fireValidationError","undefined","fireValidationSuccess","vParsedValue","parseValue","validateValue","message","sPropertyName","oBindingContext","getBindingContext","sPropertyValue","getProperty","sValidationName","getContext","bValue","getSelected","aAllCheckboxesToValidate","bSomeCheckboxIsSelected","vValue","oUiElement","oType","element","property","type","newValue","oldValue","exception","setValueState","setValueStateText","sKey","aParams","resourceBundle","Core","getLibraryResourceBundle","getText"],"mappings":"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","sourcesContent":["import ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport Input from \"sap/m/Input\";\nimport Core from \"sap/ui/core/Core\";\nimport { getScrollDelegate } from \"sap/m/library\";\nimport TextArea from \"sap/m/TextArea\";\nimport ManagedObject from \"sap/ui/base/ManagedObject\";\nimport SmartField from \"sap/ui/comp/smartfield/SmartField\";\nimport ScrollEnablement from \"sap/ui/core/delegate/ScrollEnablement\";\nimport { ValueState } from \"sap/ui/core/library\";\nimport View from \"sap/ui/core/mvc/View\";\nimport PropertyBinding from \"sap/ui/model/PropertyBinding\";\nimport SimpleType from \"sap/ui/model/SimpleType\";\nimport Type from \"sap/ui/model/Type\";\nimport ValidateException from \"sap/ui/model/ValidateException\";\nimport { isInstanceOf } from \"zqm/nc/recdefectfast/util/types\";\nimport RadioButtonGroup from \"sap/m/RadioButtonGroup\";\nimport CheckBox from \"sap/m/CheckBox\";\n\n\n/**\n * @namespace zqm.nc.recdefectfast.util\n */\nexport default class Validator {\n\n    constructor(private view: View) {\n    }\n\n    async validateFieldGroup(fieldGroup: string): Promise<boolean> {\n        const inputs = this.getFields(fieldGroup);\n        const validationErrors: Array<boolean> = await Promise.all(inputs.map(((input) => this.validateField(input))));\n\n        return validationErrors.some(Boolean);\n    }\n\n    focusFirstError(fieldGroup: string) {\n        const inputs = this.getFields(fieldGroup);\n        const firstErrorInput = inputs.find((input) => input.getValueState() === ValueState.Error);\n        if (firstErrorInput) {\n            firstErrorInput.focus();\n            const oScrollEnablement = getScrollDelegate(firstErrorInput, false) as ScrollEnablement | undefined;\n            if (oScrollEnablement) {\n                oScrollEnablement.scrollToElement(firstErrorInput.getDomRef() as HTMLElement);\n            }\n        }\n    }\n\n    private getFields(fieldGroup: string): Array<Input> {\n        return this.view\n            .getControlsByFieldGroupId(fieldGroup)\n            .filter(c => c.isA([\"sap.m.Input\", \"sap.m.TextArea\", \"sap.m.ComboBox\", \"sap.m.RadioButtonGroup\", \"sap.m.CheckBox\", \"sap.ui.comp.smartfield.SmartField\"]) && !(this.surroundedByParent(c, \"sap.ui.comp.smartfield.SmartField\"))) as Array<Input>;\n    }\n\n    private surroundedByParent(uiElement: ManagedObject, name: string): boolean {\n        return uiElement == null ? false : (uiElement.getParent() != null && uiElement.getParent().isA(\"sap.ui.comp.smartfield.SmartField\")) || this.surroundedByParent(uiElement.getParent(), name);\n    }\n\n    /**\n     * Validates ui element.\n     *\n     * @param uiElement\n     * @private\n     * @returns true if there is an validation error, false if there are no errors\n     */\n    private async validateField(uiElement: Input | TextArea | SmartField | RadioButtonGroup | CheckBox): Promise<boolean> {\n        if (isInstanceOf(uiElement, RadioButtonGroup)) {\n            return this.validateFieldRadioButton(uiElement);\n        }\n\n        if (isInstanceOf(uiElement, CheckBox)) {\n            return this.validateFieldCheckbox(uiElement);\n        }\n\n        const oBinding = uiElement.getBinding(\"value\") as PropertyBinding | undefined;\n\n        if (oBinding == null) {\n            // no value binding -> nothing to validate -> no error\n            return false;\n        }\n\n        const oValueType = oBinding.getType() as SimpleType | undefined;\n        const sDataProperty = oBinding.getPath();\n        // note: we need to get the binding value to get the real internal value instead of the display value\n        const vRawValue = oBinding.getValue() as unknown as string | number | boolean | null | undefined;\n        const vUiValue = uiElement.getValue() as unknown as string | number | boolean | null | undefined;\n\n        // smartfield validation is kind of special\n        if (isInstanceOf<SmartField>(uiElement, SmartField)) {\n            //         // workaround: custom fields by custom fields & logic are always optional, but we need mandatory fields and\n            //         // mandatory property does not work for all types smart fields\n            //         const oMandatory = uiElement.data(\"mandatory\") as boolean | string | null | undefined;\n            //         if (oMandatory === \"true\" || oMandatory === true) {\n            //             // workaround: 1 let's override the original odata definition to get the only reliable way to validate with smart fields\n            //             const oDataProperty = uiElement.getDataProperty() as { property?: { nullable?: string } };\n            //             if (\"property\" in oDataProperty) {\n            //                 oDataProperty.property.nullable = \"false\";\n            //             }\n            //             // workaround 2: just set mandatory again\n            //             if (!uiElement.getMandatory()) {\n            //                 uiElement.setMandatory(true);\n            //             }\n            //         }\n\n            try {\n                await uiElement.checkValuesValidity();\n            } catch (error: Error | unknown) {\n                if (error instanceof TypeError) {\n                    // workaround: smart field accesses properties that doesn't exist (e.g. Cannot read properties of undefined (reading 'decimals'))\n                    console.error(error);\n                } else {\n                    return true;\n                }\n            }\n            // smart fields validation passed, let's check custom rules\n            const bMandatory: boolean = uiElement.getMandatory() || this.valueAsBoolean(uiElement.data(\"mandatory\") as string) || this.valueAsBoolean(uiElement.data(\"required\") as string)\n            const bValueMissing = vRawValue === '' || vRawValue == null || (uiElement.getDataType() === \"Edm.Decimal\" && Number(vRawValue) === 0);\n\n            if (bMandatory && bValueMissing) {\n                // field is mandatory but the value is missing\n                const sMessage = this.getResourceBundleText(\"SMARTFIELD_INVALID_ENTRY\");\n                const oException = new ValidateException(sMessage);\n\n                this.fireValidationError(uiElement, sDataProperty, undefined, vUiValue, vRawValue, oException, sMessage);\n                return true;\n            }\n\n            // everything is ok\n            this.fireValidationSuccess(uiElement, sDataProperty, undefined, vUiValue, vRawValue);\n            return false;\n        } else if (oValueType != null) {\n            // other fields -> let's validate by binding type\n            // TODO get source type\n            const vParsedValue = oValueType.parseValue(vUiValue, \"string\") as string | number;\n            try {\n                await oValueType.validateValue(vParsedValue);\n            } catch (error: Error | unknown) {\n                // validation error by binding type\n                this.fireValidationError(uiElement, sDataProperty, oValueType, vParsedValue, vUiValue, error as Error, (error as Error).message);\n                return true;\n            }\n\n            // everything is ok\n            this.fireValidationSuccess(uiElement, sDataProperty, oValueType, vUiValue, vRawValue);\n            return false;\n        }\n        // not-supported, just report no error\n        return false;\n    }\n\n    private validateFieldRadioButton(uiElement:  RadioButtonGroup): boolean {\n        const bMandatory = this.valueAsBoolean(uiElement.data(\"mandatory\") as string);\n        const sPropertyName = uiElement.data(\"name\") as string;\n\n        if (!bMandatory || !sPropertyName) {\n            // not required or no name, no validation necessary/possible\n            return false;\n        }\n\n        const oBindingContext = uiElement.getBindingContext();\n        if (oBindingContext == null) {\n            return false;\n        }\n\n        const sPropertyValue = oBindingContext.getProperty(sPropertyName) as string;\n        if (!sPropertyValue) {\n            this.fireValidationError(uiElement, sPropertyName, undefined, sPropertyValue, sPropertyValue, undefined, undefined);\n            return true;\n        }\n\n        this.fireValidationSuccess(uiElement, sPropertyName, undefined, sPropertyValue, sPropertyValue);\n        return false;\n    }\n\n    public validateFieldCheckbox(uiElement: CheckBox): boolean {\n        const bMandatory = this.valueAsBoolean(uiElement.data(\"mandatory\") as string);\n        const sValidationName = uiElement.data(\"validationname\") as string;\n\n        if (!bMandatory || !sValidationName) {\n            // not required or no virtual group name, no validation necessary/possible\n            return false;\n        }\n\n        const oBinding = uiElement.getBinding(\"selected\") as PropertyBinding | undefined;\n        if (oBinding == null) {\n            // no value binding -> nothing to validate -> no error\n            return false;\n        }\n        const oBindingContext = oBinding.getContext();\n        if (oBindingContext == null) {\n            return false;\n        }\n\n        const sDataProperty = oBinding.getPath();\n        const bValue = uiElement.getSelected();\n\n        const aAllCheckboxesToValidate = this.view\n            .getControlsByFieldGroupId(sValidationName)\n            .filter(c => c.isA([\"sap.m.CheckBox\"])) as Array<CheckBox>;\n\n        const bSomeCheckboxIsSelected = aAllCheckboxesToValidate.some((c) => c.getSelected());\n\n        if (!bSomeCheckboxIsSelected) {\n            // field is mandatory but the value is missing\n            const sMessage = this.getResourceBundleText(\"SMARTFIELD_INVALID_ENTRY\");\n            const oException = new ValidateException(sMessage);\n\n            this.fireValidationError(uiElement, sDataProperty, undefined, bValue, bValue, oException, sMessage);\n            return true;\n        }\n\n        this.fireValidationSuccess(uiElement, sDataProperty, undefined, bValue, bValue);\n        return false;\n    }\n\n    /**\n     * Converts any value to boolean. Default will be false.\n     * @param vValue value to convert to boolean\n     */\n    private valueAsBoolean(vValue: boolean | string | undefined): boolean {\n        return vValue === true || vValue === \"true\";\n    }\n\n    private fireValidationError(oUiElement: Input | TextArea | RadioButtonGroup | CheckBox | SmartField , sDataProperty: string, oType: Type | undefined, vParsedValue: string | number | boolean, vRawValue: string | number | boolean, error: Error | ValidateException, message: string | undefined | null) {\n        oUiElement.fireValidationError({\n            element: oUiElement,\n            property: sDataProperty,\n            type: oType,\n            newValue: vParsedValue,\n            oldValue: vRawValue,\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            exception: error,\n            message: message\n        });\n\n        // update state & message\n        oUiElement.setValueState(ValueState.Error);\n        if (\"setValueStateText\" in oUiElement) {\n            oUiElement.setValueStateText(message)\n        }\n    }\n\n    private fireValidationSuccess(oUiElement: Input | TextArea | RadioButtonGroup | CheckBox | SmartField, sDataProperty: string, oType: Type | undefined, vParsedValue: string | number | boolean, vRawValue: string | number | boolean) {\n        oUiElement.fireValidationSuccess({\n            element: oUiElement,\n            property: sDataProperty,\n            type: oType,\n            newValue: vParsedValue,\n            oldValue: vRawValue,\n        });\n\n        // reset state & message\n        oUiElement.setValueState(undefined);\n        if (\"setValueStateText\" in oUiElement) {\n            oUiElement.setValueStateText(undefined)\n        }\n    }\n\n    private getResourceBundleText(sKey: string, aParams?: unknown[]): string {\n        // based on smartfield\n        const resourceBundle = Core.getLibraryResourceBundle(\"sap.ui.comp\") as ResourceBundle;\n        return resourceBundle.getText(sKey, aParams)\n    }\n}\n"],"file":"Validator.js"}